import telebot
from telebot import types
from flask import Flask, request
import sqlite3
import threading
import time

# üîë –ë–æ—Ç –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä—ñ
BOT_TOKEN = "8419149602:AAHvLF3XmreCAQpvJy_8-RRJDH0g_qy9Oto"
ADMIN_ID = 6927494520
WEBHOOK_URL = "https://nakedj-5.onrender.com"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# üì¶ –î–µ—Ä–µ–∫—Ç–µ—Ä –±–∞–∑–∞—Å—ã
conn = sqlite3.connect("data.db", check_same_thread=False)
cursor = conn.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    bonus INTEGER DEFAULT 5,
    progress INTEGER DEFAULT 0,
    referrals TEXT DEFAULT ''
)""")
cursor.execute("""CREATE TABLE IF NOT EXISTS videos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    file_id TEXT
)""")
conn.commit()

# üîÅ –ö“Ø–Ω —Å–∞–π—ã–Ω –±–æ–Ω—É—Å “õ–æ—Å—É
def daily_bonus():
    while True:
        cursor.execute("UPDATE users SET bonus = bonus + 5")
        conn.commit()
        users = cursor.execute("SELECT user_id FROM users").fetchall()
        for user in users:
            try:
                bot.send_message(user[0], "üéÅ –°—ñ–∑–≥–µ –∂–∞“£–∞ 5 –±–æ–Ω—É—Å –±–µ—Ä—ñ–ª–¥—ñ!")
            except:
                pass
        time.sleep(86400)

threading.Thread(target=daily_bonus, daemon=True).start()

# üè† /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    args = message.text.split()
    ref_id = args[1] if len(args) > 1 else None

    user_exists = cursor.execute("SELECT 1 FROM users WHERE user_id = ?", (user_id,)).fetchone()
    if not user_exists:
        cursor.execute("INSERT INTO users (user_id) VALUES (?)", (user_id,))
        conn.commit()
        bot.send_message(user_id, "üéâ –°—ñ–∑–≥–µ +5 –±–æ–Ω—É—Å –±–µ—Ä—ñ–ª–¥—ñ!")

        # –†–µ—Ñ–µ—Ä–∞–ª –±–æ–Ω—É—Å
        if ref_id and ref_id.isdigit() and int(ref_id) != user_id:
            ref_user = cursor.execute("SELECT 1 FROM users WHERE user_id = ?", (int(ref_id),)).fetchone()
            if ref_user:
                cursor.execute("UPDATE users SET bonus = bonus + 5, referrals = referrals || ? || ',' WHERE user_id = ?",
                               (str(user_id), int(ref_id)))
                conn.commit()
                bot.send_message(int(ref_id), f"üéÅ –°—ñ–∑ –∂–∞“£–∞ “õ–æ–ª–¥–∞–Ω—É—à—ã —à–∞“õ—ã—Ä–¥—ã“£—ã–∑! +5 –±–æ–Ω—É—Å ‚úÖ")

    # üìù –ú–µ–Ω—é –±–∞—Ç—ã—Ä–º–∞–ª–∞—Ä—ã
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üé• –í–∏–¥–µ–æ")
    btn2 = types.KeyboardButton("üë• –†–µ—Ñ–µ—Ä–∞–ª –∞–ª—É")
    btn3 = types.KeyboardButton("üì¢ –ö–∞–Ω–∞–ª—ã–º—ã–∑“ì–∞ “õ–æ—Å—ã–ª—É")
    btn4 = types.KeyboardButton("üì¶ –ö–∞–Ω–∞–ª –∞–ª—É")
    if user_id == ADMIN_ID:
        btn5 = types.KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        btn6 = types.KeyboardButton("üóë –í–∏–¥–µ–æ–ª–∞—Ä–¥—ã ”©—à—ñ—Ä—É")
        btn7 = types.KeyboardButton("üì© –†–∞—Å—Å—ã–ª–∫–∞")
        markup.add(btn1, btn2, btn3, btn4)
        markup.add(btn5, btn6, btn7)
    else:
        markup.add(btn1, btn2, btn3, btn4)

    bot.send_message(user_id,
                     "–°”ô–ª–µ–º üëã\n–ë“±–ª –±–æ—Ç –∞—Ä“õ—ã–ª—ã –≤–∏–¥–µ–æ–ª–∞—Ä–¥—ã –∫”©—Ä—ñ–ø –±–æ–Ω—É—Å –∞–ª–∞—Å—ã“£!\n"
                     "üé• ”ò—Ä –≤–∏–¥–µ–æ = 1 –±–æ–Ω—É—Å\n–ö“Ø–Ω —Å–∞–π—ã–Ω 5 –±–æ–Ω—É—Å –∞–≤—Ç–æ–º–∞—Ç—Ç—ã —Ç“Ø—Ä–¥–µ –±–µ—Ä—ñ–ª–µ–¥—ñ üéÅ",
                     reply_markup=markup)

# üé• –í–∏–¥–µ–æ
@bot.message_handler(func=lambda m: m.text == "üé• –í–∏–¥–µ–æ")
def video_watch(message):
    user_id = message.from_user.id
    user = cursor.execute("SELECT bonus, progress FROM users WHERE user_id = ?", (user_id,)).fetchone()
    if not user:
        start(message)
        return

    bonus, progress = user
    videos = cursor.execute("SELECT file_id FROM videos").fetchall()
    if bonus <= 0:
        bot.send_message(user_id, "‚ùå –ë–æ–Ω—É—Å –±—ñ—Ç–∫–µ–Ω. –ê–¥–∞–º —à–∞“õ—ã—Ä—ã“£—ã–∑ –Ω–µ–º–µ—Å–µ 24 —Å–∞“ì–∞—Ç –∫“Ø—Ç—ñ“£—ñ–∑.")
        return
    if progress >= len(videos):
        bot.send_message(user_id, "üé¨ –ë–∞—Ä–ª—ã“õ –≤–∏–¥–µ–æ–ª–∞—Ä–¥—ã –∫”©—Ä—ñ–ø –±–æ–ª–¥—ã“£—ã–∑!")
        return

    video_id = videos[progress][0]
    bot.send_video(user_id, video_id)
    cursor.execute("UPDATE users SET bonus = ?, progress = ? WHERE user_id = ?",
                   (bonus - 1, progress + 1, user_id))
    conn.commit()
    bot.send_message(user_id, f"‚úÖ –í–∏–¥–µ–æ –∫”©—Ä—Å–µ—Ç—ñ–ª–¥—ñ!\n“ö–∞–ª“ì–∞–Ω –±–æ–Ω—É—Å: {bonus - 1} üéÅ")

# üë• –†–µ—Ñ–µ—Ä–∞–ª –∞–ª—É
@bot.message_handler(func=lambda m: m.text == "üë• –†–µ—Ñ–µ—Ä–∞–ª –∞–ª—É")
def referral(message):
    user_id = message.from_user.id
    ref_link = f"https://t.me/Sallemkz_bot?start={user_id}"
    bot.send_message(user_id, f"üîó –°—ñ–∑–¥—ñ“£ —Å—ñ–ª—Ç–µ–º–µ“£—ñ–∑:\n{ref_link}\n\n”ò—Ä —à–∞“õ—ã—Ä“ì–∞–Ω –∞–¥–∞–º “Ø—à—ñ–Ω +5 –±–æ–Ω—É—Å üéÅ")

# üì¢ –ö–∞–Ω–∞–ª—ã–º—ã–∑“ì–∞ “õ–æ—Å—ã–ª—É
@bot.message_handler(func=lambda m: m.text == "üì¢ –ö–∞–Ω–∞–ª—ã–º—ã–∑“ì–∞ “õ–æ—Å—ã–ª—É")
def join_channel(message):
    user_id = message.from_user.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üîô –ë–∞—Å—Ç—ã –º”ô–∑—ñ—Ä–≥–µ –æ—Ä–∞–ª—É"))
    bot.send_message(
        user_id,
        "üåü –ö–∞–Ω–∞–ª–¥–∞—Ä“ì–∞ “õ–æ—Å—ã–ª—ã“£—ã–∑:\n\n"
        "1Ô∏è‚É£ https://t.me/Qazhuboyndar\n"
        "2Ô∏è‚É£ https://t.me/+XRoxE_8bUM1mMmIy",
        reply_markup=markup
    )

# üì¶ –ö–∞–Ω–∞–ª –∞–ª—É
@bot.message_handler(func=lambda m: m.text == "üì¶ –ö–∞–Ω–∞–ª –∞–ª—É")
def get_channel(message):
    user_id = message.from_user.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üîô –ê—Ä—Ç“õ–∞"))
    bot.send_message(
        user_id,
        "‚ù§Ô∏è –ö–∞–Ω–∞–ª –∞–ª“ì—ã“£—ã–∑ –∫–µ–ª—Å–µ –∂–∞–∑—ã“£—ã–∑:\n@KazHubALU ‚ú®Ô∏è",
        reply_markup=markup
    )

# üîô –ë–∞—Å—Ç—ã –º”ô–∑—ñ—Ä–≥–µ –æ—Ä–∞–ª—É / –ê—Ä—Ç“õ–∞
@bot.message_handler(func=lambda m: m.text in ["üîô –ë–∞—Å—Ç—ã –º”ô–∑—ñ—Ä–≥–µ –æ—Ä–∞–ª—É", "üîô –ê—Ä—Ç“õ–∞"])
def back_to_menu(message):
    start(message)

# üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–∞–¥–º–∏–Ω)
@bot.message_handler(func=lambda m: m.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" and m.from_user.id == ADMIN_ID)
def stats(message):
    total = cursor.execute("SELECT COUNT(*) FROM users").fetchone()[0]
    total_videos = cursor.execute("SELECT COUNT(*) FROM videos").fetchone()[0]
    bot.send_message(message.chat.id, f"üë• “ö–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä: {total}\nüé• –í–∏–¥–µ–æ–ª–∞—Ä —Å–∞–Ω—ã: {total_videos}")

# üóë –í–∏–¥–µ–æ–ª–∞—Ä–¥—ã ”©—à—ñ—Ä—É
@bot.message_handler(func=lambda m: m.text == "üóë –í–∏–¥–µ–æ–ª–∞—Ä–¥—ã ”©—à—ñ—Ä—É" and m.from_user.id == ADMIN_ID)
def confirm_delete(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("‚úÖ –ò”ô, ”©—à—ñ—Ä"), types.KeyboardButton("‚ùé –ñ–æ“õ"))
    bot.send_message(message.chat.id, "–°—ñ–∑ –≤–∏–¥–µ–æ–ª–∞—Ä–¥—ã ”©—à—ñ—Ä–≥—ñ“£—ñ–∑ –∫–µ–ª–µ –º–µ?", reply_markup=markup)

@bot.message_handler(func=lambda m: m.text == "‚úÖ –ò”ô, ”©—à—ñ—Ä" and m.from_user.id == ADMIN_ID)
def delete_videos(message):
    cursor.execute("DELETE FROM videos")
    cursor.execute("UPDATE users SET progress = 0")
    conn.commit()
    bot.send_message(message.chat.id, "‚úÖ –ë–∞—Ä–ª—ã“õ –≤–∏–¥–µ–æ–ª–∞—Ä ”©—à—ñ—Ä—ñ–ª–¥—ñ!")
    start(message)

@bot.message_handler(func=lambda m: m.text == "‚ùé –ñ–æ“õ" and m.from_user.id == ADMIN_ID)
def cancel_delete(message):
    bot.send_message(message.chat.id, "‚ùé –í–∏–¥–µ–æ–ª–∞—Ä —Å–∞“õ—Ç–∞–ª–¥—ã, –µ—à—Ç–µ“£–µ ”©—à—ñ—Ä—ñ–ª–º–µ–¥—ñ.")
    start(message)

# üì© –ê–¥–º–∏–Ω —Ä–∞—Å—Å—ã–ª–∫–∞
admin_broadcast = {}

@bot.message_handler(func=lambda m: m.text == "üì© –†–∞—Å—Å—ã–ª–∫–∞" and m.from_user.id == ADMIN_ID)
def start_broadcast(message):
    bot.send_message(message.chat.id, "‚úèÔ∏è “ö–∞–Ω–¥–∞–π —Ö–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä–≥—ñ“£—ñ–∑ –∫–µ–ª–µ–¥—ñ?")
    admin_broadcast[message.chat.id] = "WAITING_TEXT"

@bot.message_handler(func=lambda m: admin_broadcast.get(m.chat.id) == "WAITING_TEXT")
def get_broadcast_text(message):
    admin_broadcast[message.chat.id] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("‚úÖ –ò—è"), types.KeyboardButton("‚ùé –ñ–æ“õ"))
    bot.send_message(message.chat.id, f"–•–∞–±–∞—Ä–ª–∞–º–∞–Ω—ã –∂—ñ–±–µ—Ä–µ–π—ñ–Ω –±–µ?\n\n{message.text}", reply_markup=markup)

@bot.message_handler(func=lambda m: m.text in ["‚úÖ –ò—è", "‚ùé –ñ–æ“õ"] and m.from_user.id == ADMIN_ID)
def confirm_broadcast(message):
    if message.text == "‚úÖ –ò—è":
        text = admin_broadcast.get(message.chat.id)
        users = cursor.execute("SELECT user_id FROM users").fetchall()
        for u in users:
            try:
                bot.send_message(u[0], text)
            except:
                pass
        bot.send_message(message.chat.id, "‚úÖ –•–∞–±–∞—Ä–ª–∞–º–∞ –±–∞—Ä–ª—ã“õ “õ–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä“ì–∞ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ!")
    else:
        bot.send_message(message.chat.id, "‚ùé –†–∞—Å—Å—ã–ª–∫–∞ —Ç–æ“õ—Ç–∞—Ç—ã–ª–¥—ã.")
    admin_broadcast.pop(message.chat.id, None)
    start(message)

# üì© –ê–¥–º–∏–Ω –≤–∏–¥–µ–æ “õ–æ—Å—É
@bot.message_handler(content_types=['video'])
def add_video(message):
    if message.from_user.id != ADMIN_ID:
        return
    cursor.execute("INSERT INTO videos (file_id) VALUES (?)", (message.video.file_id,))
    conn.commit()
    total = cursor.execute("SELECT COUNT(*) FROM videos").fetchone()[0]
    bot.send_message(message.chat.id, f"‚úÖ –í–∏–¥–µ–æ —Å–∞“õ—Ç–∞–ª–¥—ã! –ë–∞—Ä–ª—ã“ì—ã: {total} üé•")

# üåê Flask Webhook –±”©–ª—ñ–≥—ñ
@app.route(f"/{BOT_TOKEN}", methods=['POST'])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode('utf-8'))
    bot.process_new_updates([update])
    return "ok", 200

@app.route("/")
def index():
    bot.remove_webhook()
    bot.set_webhook(url=f"{WEBHOOK_URL}/{BOT_TOKEN}")
    return "–ë–æ—Ç –∂“±–º—ã—Å —ñ—Å—Ç–µ–ø —Ç“±—Ä ‚úÖ", 200

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
